[General]
output-scalar-file-append = false 
 
# Network configuration 
network = simu5g.simulations.NR.networks.SingleCell_Standalone 
sim-time-limit = 10s 
warmup-period = 1s 
seed-set = ${repetition} 
 
# Statistics 
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca 
output-vector-file = ${resultdir}/${configname}/${repetition}.vec 
**.routingRecorder.enabled = false 
  
# General parameters 
**.amcType = "NRAmc" 
**.targetBler = 0.01 
**.blerShift = 5   
*.configurator.config = xmldoc("./demo.xml") 

# Floorplan definition 
**.mobility.constraintAreaMaxX = 1000m 
**.mobility.constraintAreaMaxY = 1000m 
**.mobility.constraintAreaMinX = 0m 
**.mobility.constraintAreaMinY = 0m 
**.mobility.constraintAreaMinZ = 0m 
**.mobility.constraintAreaMaxZ = 0m 
**.mobility.initFromDisplayString = false 
# --------------------------------------------------------# 

# --------------------------------------------------------# 
# Config "Single-UE" 
# 
# Simple scenario with one UE attached to one gNB. A remote  
# server sends 800 kbps CBR traffic to the UE 
# 
[Config Single-UE]

# gNodeB position 
*.gnb.mobility.initialX = 500m 
*.gnb.mobility.initialY = 500m 

# UE configuration 
*.numUe = 1

# my changes
*.ue[*].mobility.typename = "RandomWaypointMobility"
*.ue[*].mobility.speed = 10mps
*.ue[*].mobility.idleTime = exponential(1s)
*.ue[*].mobility.displayMovement = true

# UE position (400m far from the gNB)
*.ue[*].mobility.initialX = 500m 
*.ue[*].mobility.initialY = 900m 

 
# connect the UE's NIC (NR side) to the corresponding serving gNB 
*.ue[*].macCellId = 0 
*.ue[*].masterId = 0 
*.ue[*].nrMacCellId = 1 
*.ue[*].nrMasterId = 1 
 
# Application Setup 
*.ue[*].numApps = 1 
*.server.numApps = 1 
 
*.ue[*].app[*].typename = "CbrReceiver" 
*.ue[*].app[*].localPort = 1000 
 
*.server.app[*].typename = "CbrSender"   
*.server.app[*].PacketSize = 1000      # send 800 Kb/s 
*.server.app[*].sampling_time = 0.01s 
*.server.app[*].destAddress = "ue["+string(ancestorIndex(0))+"]" # obtain the address of the client by reading its index in the array of Apps 
*.server.app[*].destPort = 1000  
*.server.app[*].localPort = 3088+ancestorIndex(0)  
*.server.app[*].startTime = uniform(0.01s,0.05s) 
# --------------------------------------------------------# 

# --------------------------------------------------------# 
# Config "BgTraffic" 
# 
# Add one background cell serving 10 background UEs in order  
# to generate some inter-cell interfence to the UE served by  
# the foreground cell. Each background UE generates 800 kbps
# CBR traffic 
# 
[Config BgTraffic]
extends = Single-UE 
 
########## Background cells configuration ############# 
*.numBgCells = 1 

*.bgCell[*].bgScheduler.isNr = true 
*.bgCell[*].bgScheduler.txPower = 23 
 
# position of the background gNodeB 
*.bgCell[*].mobility.initialX = 750m 
*.bgCell[*].mobility.initialY = 1000m 
 
# number and position of background UEs in the background cells 
*.bgCell[*].bgTrafficGenerator.numBgUes = 10 
*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(500m,1000m) 
*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(500m,1000m) 
 
# Background traffic in the background cells  
*.bgCell[*].bgTrafficGenerator.bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr" 
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.startTimeDl = uniform(0s,0.05s) 
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeDl = 1000B 
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodDl = 0.01s 
# --------------------------------------------------------# 

  
# --------------------------------------------------------# 
# Config "Multiple-UEs" 
# 
# Add a variable number of UEs in the foreground cell. All UEs 
# receive the same 800 kbps CBR traffic from the remote server 
# 
[Config Multiple-UEs]
extends = BgTraffic 

# variable number of UEs 
*.numUe = ${numUes=1,5,10,15,20} 

# UEs position
*.ue[*].mobility.initialX = uniform(0m,1000m)
*.ue[*].mobility.initialY = uniform(0m,1000m) 

# the server has one app per client 
*.server.numApps = ${numUes} 

# include itervars in the output file names 
output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca 
output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec 
# --------------------------------------------------------# 

  

# --------------------------------------------------------# 
# Config "CarrierAggregation" 
# 
# Configure the gNodeBs (both foreground and background) with Carrier Aggregation (CA). 
# gNodeBs use two Carrier Components (CCs, @2GHz and 6GHz respectively). UEs are  
# configured to use both CCs. 
# For the background cell, CA is modeled by adding another background cell in the same 
# position as the first one, and using different carrier frequency. 
# 
[Config CarrierAggregation]
extends = Multiple-UEs  

############### CA configuration ################ 
*.carrierAggregation.numComponentCarriers = 2 
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz 
*.carrierAggregation.componentCarrier[0].numBands = 6 
*.carrierAggregation.componentCarrier[1].carrierFrequency = 6GHz 
*.carrierAggregation.componentCarrier[1].numBands = 6 
 
*.gnb.cellularNic.numCarriers = 2 
*.gnb.cellularNic.channelModel[0].componentCarrierIndex = 0 
*.gnb.cellularNic.channelModel[1].componentCarrierIndex = 1  

*.ue[*].cellularNic.numNRCarriers = 2 
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0 
*.ue[*].cellularNic.nrChannelModel[1].componentCarrierIndex = 1 
 
############ Background cells configuration ############# 
*.numBgCells = 2 

*.bgCell[0].bgScheduler.carrierFrequency = 2GHz 
*.bgCell[0].bgScheduler.numBands = 6 
*.bgCell[1].bgScheduler.carrierFrequency = 6GHz 
*.bgCell[1].bgScheduler.numBands = 6 
*.bgCell[*].bgScheduler.txPower = 23 
# --------------------------------------------------------# 

  

# --------------------------------------------------------# 
# Config "Numerology" 
# 
# Configure all the CCs to use variable numerologies 
# 
[Config Numerology]
extends = CarrierAggregation 

# configure numerology for all component carriers
*.carrierAggregation.componentCarrier[*].numerologyIndex = ${num = 0,2,4} 
*.bgCell[*].bgScheduler.numerologyIndex = ${num} 
# --------------------------------------------------------# 


[Config HandoverSimulation2]
description = "Simulation with UE moving from gNB1 to gNB2 to observe handover"
network = simu5g.simulations.NR.networks.MultiCell_Standalone
sim-time-limit = 20s
warmup-period = 1s

extends = General

# General parameters
**.amcType = "NRAmc"
**.targetBler = 0.01
**.blerShift = 5
*.configurator.config = xmldoc("demo.xml")

# Floorplan definition
**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 1000m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

# Number of UEs
*.numUe = 1

# UE Mobility Configuration
*.ue[*].mobility.typename = "LinearMobility"
*.ue[*].mobility.initialX = 250m
*.ue[*].mobility.initialY = 350m
*.ue[*].mobility.speed = 25mps
*.ue[*].mobility.angle = 0deg
*.ue[*].mobility.displayMovement = true

# gNB Positions
*.gnb1.mobility.initialX = 250m
*.gnb1.mobility.initialY = 300m

*.gnb2.mobility.initialX = 750m
*.gnb2.mobility.initialY = 300m

# Node IDs
*.gnb1.nodeId = 1
*.gnb2.nodeId = 2

# X2 Configuration
*.gnb1.numX2Apps = 1
*.gnb2.numX2Apps = 1

*.gnb1.x2App[0].typename = "LteX2GnbApp"
*.gnb2.x2App[0].typename = "LteX2GnbApp"

*.gnb1.x2App[0].localAddress = "10.0.0.1"
*.gnb1.x2App[0].remoteAddress = "10.0.0.2"
*.gnb1.x2App[0].localPort = 0

*.gnb2.x2App[0].localAddress = "10.0.0.2"
*.gnb2.x2App[0].remoteAddress = "10.0.0.1"
*.gnb2.x2App[0].localPort = 0

# Binder Configuration
*.binder.maxNumX2PortsPerNode = 10

# Enable handover functionality
*.gnb1.cellularNic.phy.enableHandover = true
*.gnb2.cellularNic.phy.enableHandover = true
*.ue[*].cellularNic.phy.enableHandover = true
*.ue[*].cellularNic.nrPhy.enableHandover = true

# Enable handover at the RRC layer
*.ue[*].cellularNic.lteNic.rrc.enableHandover = true
*.gnb1.cellularNic.lteNic.rrc.enableHandover = true
*.gnb2.cellularNic.lteNic.rrc.enableHandover = true

# Configure handover parameters
*.ue[*].cellularNic.lteNic.rrc.handoverMargin = 3dB
*.ue[*].cellularNic.lteNic.rrc.timeToTrigger = 1s

# Assign UE to gNB1 initially
*.ue[*].macCellId = 0
*.ue[*].masterId = 0
*.ue[*].nrMacCellId = 1
*.ue[*].nrMasterId = 1

# Application Setup
*.server.numApps = 1
*.ue[*].numApps = 1

# UE Application
*.ue[*].app[0].typename = "UdpSink"
*.ue[*].app[0].localPort = 5000

# Server Application
*.server.app[0].typename = "UdpBasicBurst"
*.server.app[0].destAddresses = "ue[0]"
*.server.app[0].chooseDestAddrMode = "once"
*.server.app[0].destPort = 5000
*.server.app[0].messageLength = 1000B
*.server.app[0].burstDuration = 0s
*.server.app[0].sleepDuration = 0s
*.server.app[0].sendInterval = 0.01s
*.server.app[0].startTime = 1s

# Disable IPv6 if not used
*.server.hasIpv6 = false
*.router.hasIpv6 = false
*.upf.hasIpv6 = false
*.iUpf.hasIpv6 = false
*.gnb1.hasIpv6 = false
*.gnb2.hasIpv6 = false
*.ue[*].hasIpv6 = false

# Disable unused interfaces
*.server.numEthInterfaces = 0
*.router.numEthInterfaces = 0
*.upf.numEthInterfaces = 0
*.iUpf.numEthInterfaces = 0


# --------------------------------------------------------# 
# Config "HandoverSimulation-UE" 
# 
# 
[Config HandoverSimulation]
description = "Simulation with UE moving from gNB1 to gNB2 to observe handover"
network = simu5g.simulations.NR.networks.MultiCell_Standalone
sim-time-limit = 20s  # Adjust as needed
warmup-period = 1s

extends = General

*.numUe = 1

*.ue[*].mobility.typename = "LinearMobility"

# gNB1 Position
*.gnb1.mobility.initialX = 250m
*.gnb1.mobility.initialY = 300m

*.gnb2.mobility.initialX = 750m
*.gnb2.mobility.initialY = 300m

*.gnb1.nodeId = 1
*.gnb2.nodeId = 2

# X2 config
*.gnb1.numX2Apps = 1
*.gnb2.numX2Apps = 1

# Assign IP addresses to X2 interfaces 
# Configure the Binder to allocate X2 ports
*.binder.maxNumX2PortsPerNode = 10

*.gnb1.x2App[0].typename = "X2AppClient"
*.gnb2.x2App[0].typename = "X2AppClient"

*.gnb1.x2App[0].localAddress = "10.0.0.1"
*.gnb1.x2App[0].client.connectAddress = "10.0.0.2"

*.gnb2.x2App[0].localAddress = "10.0.0.2"
*.gnb2.x2App[0].client.connectAddress = "10.0.0.1"

*.gnb1.x2App[0].localPort = 0
*.gnb2.x2App[0].localPort = 0

# UE Initial Position (close to gNB1)
*.ue[*].mobility.initialX = 250m  # Same X as gNB1
*.ue[*].mobility.initialY = 350m  # Slightly offset in Y

*.ue[*].mobility.speed = 25mps  # Adjust speed as desired
*.ue[*].mobility.initialMovementHeading = 0deg
*.ue[*].mobility.angle = 0deg   # Moving along positive X-axis
*.ue[*].mobility.displayMovement = true  # For visualization

# Enable handover functionality
*.gnb1.cellularNic.phy.enableHandover = true
*.gnb2.cellularNic.phy.enableHandover = true
*.ue[*].cellularNic.phy.enableHandover = true
*.ue[*].cellularNic.nrPhy.enableHandover = true  # If using NR PHY

# Enable handover at the RRC layer
*.ue[*].cellularNic.lteNic.rrc.enableHandover = true
*.gnb1.cellularNic.lteNic.rrc.enableHandover = true
*.gnb2.cellularNic.lteNic.rrc.enableHandover = true

# Configure handover parameters
*.ue[*].cellularNic.lteNic.rrc.handoverMargin = 3dB
*.ue[*].cellularNic.lteNic.rrc.timeToTrigger = 1s

# Assign UE to gNB1 initially
*.ue[*].macCellId = 0        # Cell ID of gNB1
*.ue[*].masterId = 0         # Master ID of gNB1
*.ue[*].nrMacCellId = 1      # NR Cell ID (if applicable)
*.ue[*].nrMasterId = 1       # NR Master ID (if applicable)

# Application Setup
*.server.numApps = 1
*.ue[*].numApps = 1

# UE Application
*.ue[*].app[0].typename = "UdpSink"
*.ue[*].app[0].localPort = 5000

# Server Application
*.server.app[0].typename = "UdpBasicBurst"
*.server.app[0].destAddresses = "ue[0]"
*.server.app[0].chooseDestAddrMode = "once"
*.server.app[0].destPort = 5000
*.server.app[0].messageLength = 1000B  # Packet size
*.server.app[0].burstDuration = 0s     # Continuous sending
*.server.app[0].sleepDuration = 0s     # No sleep between bursts
*.server.app[0].sendInterval = 0.01s   # Adjust to get desired bitrate
*.server.app[0].startTime = 1s

# Calculating Bitrate:
#    Packet Size: 1000 Bytes = 8000 bits
#    Send Interval: Every 0.01s
#    Bitrate: (8000 bits) / 0.01s = 800,000 bps (800 kbps)

# RSSP: reference signal received power 
# RSSI: received signal strength indicator
# RSRQ: reference signal received quality 

# --------------------------------------------------------# 
